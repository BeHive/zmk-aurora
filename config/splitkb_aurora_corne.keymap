/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------------------------------------------------------------------
// | TAB      |    Q     |    W     |    E     |    R     |    T     |           |    Y     |    U     |    I     |    O     |    P     |  BKSP    |
// | ESC      |    A     |    S     |    D     |    F     |    G     |           |    H     |    J     |    K     |    L     |    ;     |    '     |
// | SHFT     |    Z     |    X     |    C     |    V     |    B     |           |    N     |    M     |    ,     |    .     |    /     |   RET    |
//                                  |  CTRL    |   LWR    |   GUI    |           |   SPC    |   RSE    |   ALT    |
                        bindings = <
     &kp TAB    &kp Q      &kp W      &kp F      &kp P      &kp G                  &kp J      &kp L      &kp U      &kp Y      &kp SEMI   &kp BKSP
     &kp ESC    &kp A      &kp R      &kp S      &kp T      &kp D                  &kp H      &kp N      &kp E      &kp I      &kp O      &kp QUOT
     &kp LSHFT  &kp Z      &kp X      &kp C      &kp V      &kp B                  &kp K      &kp M      &kp COMMA  &kp DOT    &kp FSLH   &kp RET       
                                      &kp LCTRL  &mo 1      &kp LGUI               &kp SPACE  &mo 2      &kp LALT    
                        >;
                };
                lower_layer {
// -------------------------------------------------------------------------------------------------------------------------------------------------
// |          |    1     |    2     |    3     |    4     |    5     |           |    6     |    7     |    8     |    9     |    0     |    \     |
// |          |          |   MB1    |   UP     |   MB2    |          |           |    -     |    =     |          |    [     |    ]     |    `     |
// |          |          |  LEFT    |   DOWN   |  RIGHT   |          |           |          |          |          |          |          |          |
//                                  |          |          |          |           |          |          |          |
                        bindings = <
     &trans     &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                 &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &kp BSLH
     &trans     &trans     &mkp MB1   &kp UP     &mkp MB2   &trans                 &kp MINUS  &kp EQUAL  &trans     &kp LBKT   &kp RBKT   &kp GRAVE
     &trans     &trans     &kp LEFT   &kp DOWN   &kp RIGHT  &trans                 &trans     &trans     &trans     &trans     &trans     &trans
                                      &trans     &trans     &kp BKSP               &trans     &trans     &trans
                        >;
                };

                raise_layer {
// -------------------------------------------------------------------------------------------------------------------------------------------------
// |          |          |          |          |          |          |           |          |          |          |          |          |          | 
// |          |          |          |          |          |          |           |          |          |          |          |          |          |
// |          |          |          |          |          |          |           |          |          |          |          |          |          |
//                                  |          |          |          |           |          |          |          |
                        bindings = <
     &trans     &trans     &trans     &trans     &trans     &trans                 &trans     &trans     &trans      &trans     &kp BKSP  &trans
     &trans     &trans     &trans     &trans     &trans     &trans                 &trans     &trans     &trans      &trans     &kp QUOT  &trans
     &trans     &trans     &trans     &trans     &trans     &trans                 &trans     &trans     &trans      &trans     &trans    &trans
                                      &trans     &trans     &trans                 &kp RET    &trans     &trans
                        >;
                };

                adjust_layer {
// -------------------------------------------------------------------------------------------------------------------------------------------------
// |          |    !     |    @     |    #     |    $     |    %     |           |    ^     |    &     |    *     |    (     |    )     |   "|"    |
// |          |          |          |          |          |          |           |          |    -     |    +     |    {     |    }     |    `     |
// |          |          |          |          |          |          |           |          |          |  BT_PRV  |  BT_NXT  |          |  BT_CLR  |
//                                  |          |          |          |           |          |          |          |
                        bindings = <
     &trans     &kp TAB    &trans     &trans     &trans     &trans                 &trans     &trans     &trans      &trans     &kp BKSP   &trans 
     &trans     &kp ESC    &trans     &trans     &trans     &trans                 &trans     &trans     &trans      &trans     &kp QUOT   &trans
     &trans     &kp LSHFT  &trans     &trans     &trans     &trans                 &trans     &trans     &bt BT_PRV  &bt BT_NXT &bt BT_CLR &trans
                                      &trans     &trans     &trans                 &trans     &trans     &trans
                        >;
                };
        };
};
